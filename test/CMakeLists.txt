
##unit test project

cmake_minimum_required(VERSION 3.2)

PROJECT(UnitTest)

MESSAGE(status " this is SOURCE dir : " ${PROJECT_SOURCE_DIR})
MESSAGE(status " this is BINARY dir : " ${PROJECT_BINARY_DIR})

#set env
SET(CMAKE_CXX_FLAGS "")
SET(CMAKE_CXX_FLAGS_DEBUG "-g3 -Wall")
SET(CMAKE_CXX_FLAGS_RELEASE "-o2 -Wall")

#set garvin lib directory

if (${CMAKE_BUILD_TYPE} MATCHES "debug")
  SET(GARVIN_LIB_DIR ${PROJECT_SOURCE_DIR}/../lib/debug)
else()
  SET(GARVIN_LIB_DIR ${PROJECT_SOURCE_DIR}/../lib)
endif()

#include libraries
INCLUDE_DIRECTORIES(/usr/local/gtest/include ${PROJECT_SOURCE_DIR}/../include)
LINK_DIRECTORIES(/usr/local/gtest/lib ${GARVIN_LIB_DIR})

#src list
SET(SRC_LIST ${PROJECT_SOURCE_DIR}/src/main.cpp)
AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR}/src/base TMP_SRC_LIST)
LIST(APPEND SRC_LIST ${TMP_SRC_LIST})

AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR}/src/database TMP_SRC_LIST)
LIST(APPEND SRC_LIST ${TMP_SRC_LIST})

AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR}/src/network TMP_SRC_LIST)
LIST(APPEND SRC_LIST ${TMP_SRC_LIST})

AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR}/src/util TMP_SRC_LIST)
LIST(APPEND SRC_LIST ${TMP_SRC_LIST})

ADD_EXECUTABLE(unit_test ${SRC_LIST})

if (${CMAKE_BUILD_TYPE} MATCHES "debug")
  SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin/debug)
  TARGET_LINK_LIBRARIES(unit_test gtest garvinengine_d)
else()
  SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
  TARGET_LINK_LIBRARIES(unit_test gtest garvinengine)
endif()
